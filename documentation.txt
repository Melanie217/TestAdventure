Erstmal groben Plan aufstellen, wie das Spiel überhaupt aussehen soll. 
Also ich hätte gerne Räume, durch die man gehen kann. 
Man bekommt die Richtungen angesagt, und kann sich dann dadurch bewegen. 
Evtl Labirinth? 

Also brauch ich eine Klasse "Rooms" und eine "Game", damit meine main total aufgeräumt ist. 

"ROoms" sollte Himmelsrichtungen, einen Namen und eine Beschreibung besitzen. 
an die Himmelsrichtungen werden weitere Räume angeschlossen. 
(Anfangs zum testen 3) 

Da ich zu faul war, alles immer im Code per Handabzutippen, hab ich mir angelesen, wie man aus einem Text file dinge einliest. 
SOmit muss ich nur das Textfile abändern, wenn ich etwas an den Räumen ändern möchte. 

Beim ersten mal laufen lassen hatte ich direkt einen Segmentation faul. 
Beim Debuggen in Visual Studio konnte ihc nicht rausfinden, woran das gelegen hat, und auch die mehtode im Terminal mit entweder gdb (was bei MacOS aber extrem schwierig ist) 
oder lldb konnten mir hier uach nicht so wirklich weiterhelfen, da mit nicht die Zeilen im Code gezeigt worden sind, wo der auftritt. 
Also musste ich auf die alte Methode mit cout zurückgreifen, um zu testen, bis wohin der Code noch läuft. 
Hier bin ich dann auhc recht schnell auf ein Ergebnis gekommen, war mir dann aber nicht sicher, warum hier der Fehler auftritt. 
Es sollten eigentlich keine Probleme bei dem ZUgrifff von Game.chh auf die Variablen eines Rooms auftreten. 

Also musste ich weiter auf Fehlersuche gehen, und habe ihn dann schließlich in meinem rooms.txt file gefunden. 
Ich hatte das ende der Räume Falsch benannt, und beim einlesen und erstellen der Räume ist hier in Problem aufgetreten. 
Der Segmentation Fehler ist somit aufgetretetn, weil die Variable da noch nicht existiert hat, auf die ich zugreifen wollte. 
Nach beheben des Fehlers läuft das Programm wieder. 

Next step: User Eingabe. 

User Eingabe war im Vergleich relativ einfach. Man muss nur prüfen ob etwas richtiges eingegeben worden ist, also eine RIchung oder exit. 
Dies muss nur abgeglichen werden, und anschließend an das Spiel weitergegeben werden. 

Nächster step ist ein Key. 
Hierfür war kurz die Überlegung, ob man eine Klasse Item.hpp erstellt, allerdings waren weitere Items nicht in der kurzzeitigen Planung, weswegen nur eine Key Klasse geschrieben wurde. 
Am Anfang des Spiels wird dementsprechend aktuell ein Key erstellt, der den letzten "Raum" öffnet. 
Ohne den Key, kann man den den Letzten Raum nicht betreten. 
Hierfür wurde auch eine Key Anzeige unter den Namen des Raumes ausgegeben, die die Anzahl der Keys anzeigt. (Aktuell nur 0 und 1)
Um das Spiel nicht immer gleich verlaufen zu lassen, wird am Anfang random eine Zahl ausgewählt (ausgeschlossen Start und Endraum), in dem der Key spawned. 

Hierbei ist ein Fehler aufgetreten, da man auch ohne Key den letzten Raum betreten konnte. 
Debuggen hat leider unter MacOs nicht funktioniert, da anscheinend die Usereingabe nicht supported wird? - Hier bin ich nicht ganz schlau rausgeworden. 
ALso hab ich mir eine Windows Partition erstellt, hier VSC geladen, mit MinGW und git, und es hier erneut versucht. 
Nach einigen Problemen mit der task.json und launch.json konnte ich hier debuggen, und den Fehler feststellen. 
Ich hatte eine Variable doppelt deklariert, einmal lokal und einmal global. 
Leider wurden die Werte, die für mich wichtig waren nur lokal gespeichert und nicht global. Somit hatte ich den Fehler gefunden, der mir so nicht aufgefallen ist. 

Ein anderes interessantes Ereignis ist mir auch aufgefallen, als ich unter Windwos debugged habe. 
Hier wurde mir öfter eine andere Zahl ausgegeben beim Randomizen des Keyraumes. 
unter MacOs ist bis jetzt fast immer der gleiche Raum ausgegeben worden. Bin mir nicht sicher, an was das liegt. 
Denn immer die gleiche Zahl kann auch zufällig sein. 